.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GridContainer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GridContainer:

GridContainer
=============

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Grid container used to arrange elements in a grid like layout.

Properties
----------

+-----------------------+---------------------------------------------+
| :ref:`int<class_int>` | :ref:`columns<class_GridContainer_columns>` |
+-----------------------+---------------------------------------------+

Methods
-------

+--------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Control<class_Control>`  | :ref:`get_child_control_at_cell<class_GridContainer_get_child_control_at_cell>` **(** :ref:`int<class_int>` row, :ref:`int<class_int>` column **)** |
+--------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------+

Theme Properties
----------------

+-----------------------+-----------------------------------------------------+
| :ref:`int<class_int>` | :ref:`hseparation<class_GridContainer_hseparation>` |
+-----------------------+-----------------------------------------------------+
| :ref:`int<class_int>` | :ref:`vseparation<class_GridContainer_vseparation>` |
+-----------------------+-----------------------------------------------------+

Description
-----------

Grid container will arrange its children in a grid like structure, the grid columns are specified using the :ref:`set_columns<class_GridContainer_set_columns>` method and the number of rows will be equal to the number of children in the container divided by the number of columns, for example: if the container has 5 children, and 2 columns, there will be 3 rows in the container. Notice that grid layout will preserve the columns and rows for every size of the container.

Property Descriptions
---------------------

.. _class_GridContainer_columns:

- :ref:`int<class_int>` **columns**

+----------+--------------------+
| *Setter* | set_columns(value) |
+----------+--------------------+
| *Getter* | get_columns()      |
+----------+--------------------+

The number of columns in the ``GridContainer``. If modified, ``GridContainer`` reorders its children to accommodate the new layout.

Method Descriptions
-------------------

.. _class_GridContainer_get_child_control_at_cell:

- :ref:`Control<class_Control>` **get_child_control_at_cell** **(** :ref:`int<class_int>` row, :ref:`int<class_int>` column **)**

